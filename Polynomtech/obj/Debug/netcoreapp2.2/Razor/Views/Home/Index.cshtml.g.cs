#pragma checksum "C:\Users\lenovo\Desktop\Yeni klasör (2)\Yeni klasör (3)\Polynomtech\Polynomtech\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b179e63a90bc631b4f46960d0fd879e0be0dad3b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\lenovo\Desktop\Yeni klasör (2)\Yeni klasör (3)\Polynomtech\Polynomtech\Views\_ViewImports.cshtml"
using Polynomtech;

#line default
#line hidden
#line 2 "C:\Users\lenovo\Desktop\Yeni klasör (2)\Yeni klasör (3)\Polynomtech\Polynomtech\Views\_ViewImports.cshtml"
using Polynomtech.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b179e63a90bc631b4f46960d0fd879e0be0dad3b", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ae256c88850f843b599a4191883f8c0f7b1b3802", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\lenovo\Desktop\Yeni klasör (2)\Yeni klasör (3)\Polynomtech\Polynomtech\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b179e63a90bc631b4f46960d0fd879e0be0dad3b4438", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(96, 441, true);
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Polynomtech</h1>

</div>
<div class=""container"" style=""padding-top:200px"">
    <div class=""row"">
        <div class=""col-md-4""> <input type=text name=sample_search placeholder=""İsim Ara"" id=parfumeSearch onkeyup=search_func(this.value);></div>
        <div class=""col-md-4"">
            <label>Fiyata Göre Filtrele</label>
            <select id=""priceFilter"">
                ");
            EndContext();
            BeginContext(537, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b179e63a90bc631b4f46960d0fd879e0be0dad3b6072", async() => {
                BeginContext(555, 11, true);
                WriteLiteral("Artan Fiyat");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(575, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(593, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b179e63a90bc631b4f46960d0fd879e0be0dad3b7468", async() => {
                BeginContext(612, 12, true);
                WriteLiteral("Azalan Fiyat");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(633, 8184, true);
            WriteLiteral(@"
            </select>
        </div>
        <div class=""col-md-4"">
            <label>Markaya Göre Filtrele</label>
            <select id=""brandFilter"">
            </select>
        </div>
        <table class=""table"">
            <thead>
                <tr>
                    <th scope=""col"">Ürün Adı</th>
                    <th scope=""col"">Marka</th>
                    <th scope=""col"">Fiyat</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id=""tbody"">
            </tbody>
        </table>
    </div>
</div>

<div class=""row"">
    <div class=""col-md-5"" style=""    border-radius: 19px;
    border: solid 1px;"">
        <table class=""table"">
            <thead>
                <p class=""text-center"">SEPETİM</p>
                <tr>
                    <th scope=""col"">Ürün Adı</th>
                    <th scope=""col"">Marka</th>
                    <th scope=""col"">Fiyat</th>
                    <th></th>
                </tr>
 ");
            WriteLiteral(@"           </thead>
            <tbody id=""tbodybasket"">
                <input type=""button"" id=""OrderAdd"" class=""btn btn-primary"" value=""Sipariş Ver""/>
            </tbody>
        </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        $.ajax({
            type: ""Get"",
            url: ""/api/parfumes?$select=parfumeID,parfumename,price,BrandId,&$Expand=Brand($select=BrandName)"",
            success: function (gelen) {
                gelen.map(function (item) {
                    console.log(item)
                    $('#tbody').append(`<tr class=""tables"">
                      <td id=""parfumeName"" value=""${item.ParfumeName}"">${item.ParfumeName}</td>
                    <td id=""brandName"" value=""${item.Brand.BrandName}"">${item.Brand.BrandName}</td>
                    <td id=""price"" value=""${item.Price}"">${item.Price}</td>
                    <td id=""brandid"" display=none value=""${item.BrandId}"" > ${item.BrandId} </td>
                    <td id=""parfumeid"" disp");
            WriteLiteral(@"lay=none value=""${item.ParfumeID}"" > ${item.ParfumeID} </td>

                    <td><button class=""btn btn-primary"" value=""${item.ParfumeID}"" onclick=""addCart(${item.ParfumeID})""    id=""basketButton"" >Sepete Ekle </button> </td>
                </tr>`)
                })
            }
        });
        $.ajax({
            type: ""Get"",
            url: ""/api/brands"",
            success: function (gelen) {
                gelen.map(function (item) {
                    console.log(item)
                    $('#brandFilter').append(`<option value=""${item.brandID}"">${item.brandName}</option>`)
                })
            }
        });
    })

    $('#priceFilter').change(function () {
        $('.tables').empty();
        if ($('#priceFilter').val() == 1) {
            $.ajax({
                type: ""Get"",
                url: ""/api/parfumes?$select=ParfumeName,ParfumeID,Price,Brand&$expand=Brand($select=BrandName)&$orderby=price%20asc"",
                success: function (gelen) ");
            WriteLiteral(@"{
                    gelen.map(function (item) {
                        console.log(item)
                        $('#tbody').append(`<tr class=""tables"">
                    <td>${item.ParfumeName}</td>
                    <td>${item.Brand.BrandName}</td>
                    <td>${item.Price}</td>
                    <td>${item.ParfumeID}</td>
                    <td><button class=""btn btn-primary"" onclick=""addCart(${item.ParfumeID})""  id=${item.ParfumeID}>Sepete Ekle </button> </td>
                </tr>`)
                    })
                }
            });
        } else {
            $.ajax({
                type: ""Get"",
                url: ""/api/parfumes?$select=ParfumeName,ParfumeID,Price,Brand&$expand=Brand($select=BrandName)&$orderby=Price%20desc"",
                success: function (gelen) {
                    gelen.map(function (item) {
                        console.log(item)
                        $('#tbody').append(`<tr class=""tables"">
                     <td>${item");
            WriteLiteral(@".ParfumeName}</td>
                    <td>${item.Brand.BrandName}</td>
                    <td>${item.Price}</td>
                    <td>${item.ParfumeID}</td>
                    <td><button class=""btn btn-primary"" id=${item.ParfumeID}>Sepete Ekle </button> </td>
                </tr>`)
                    })
                }
            });
        }
    })

    $('#brandFilter').change(function () {
        $.ajax({
            type: ""Get"",
            url: ""/api/parfumes?&$filter=BrandID%20eq "" + $('#brandFilter').val() + "" &$Select=ParfumeName,Price,BrandId,Brand&$expand=Brand($Select=BrandName)"",
            success: function (gelen) {
                $('#tbody').empty();
                gelen.map(function (item) {
                    console.log(item)
                    $('#tbody').append(`<tr class=""tables"">
                     <td id=""parfumeName"" value=""${item.ParfumeName}"">${item.ParfumeName}</td>
                    <td id=""brandName"" value=""${item.Brand.BrandName}"">${it");
            WriteLiteral(@"em.Brand.BrandName}</td>
                    <td id=""price"" value=""${item.Price}"">${item.Price}</td>
                    <td id=""brandid"" display=none value=""${item.BrandId}"" > ${item.BrandId} </td>
                    <td><button class=""btn btn-primary"" value=""${item.ParfumeID}"" onclick=""addCart(${item.ParfumeID})""  id=""basketButton"" >Sepete Ekle </button> </td>
                </tr>`)
                })
            }
        });
    })
    function search_func(value) {
        $.ajax({
            type: ""Get"",
            url: ""/api/parfumes?$filter=startswith(ParfumeName,%20%27"" + value + ""%27)%20eq%20true&$Select=ParfumeName,ParfumeID,Price,BrandId,Brand&$expand=Brand($Select=BrandName)"",
            success: function (gelen) {
                $('#tbody').empty();
                gelen.map(function (item) {
                    console.log(item)
                    $('#tbody').append(`<tr class=""tables"">
                     <td id=""parfumeName"" value=""${item.ParfumeName}"">${item.ParfumeN");
            WriteLiteral(@"ame}</td>
                    <td id=""brandName"" value=""${item.Brand.BrandName}"">${item.Brand.BrandName}</td>
                    <td id=""price"" value=""${item.Price}"">${item.Price}</td>
                    <td id=""brandid"" display=none value=""${item.BrandId}"" > ${item.BrandId} </td>
                    <td id=""parfumeid"" display=none value=""${item.ParfumeID}"" > ${item.ParfumeID} </td>

                    <td><button class=""btn btn-primary"" value=""${item.ParfumeID}""  id=""basketButton"" >Sepete Ekle </button> </td>
                </tr>`)
                })
            }
        });
    }
    var list = new Array();
    function addCart(parfumeID) {
        $.ajax({
            type: ""Get"",
            url: ""/api/parfumes?&$filter=ParfumeID eq "" + parfumeID + ""&$Select=ParfumeName,ParfumeID,Price,BrandId,Brand&$expand=Brand($Select=BrandName)"",
            success: function (gelen) {
                gelen.map(function (item) {
                    list.push(item);
                    $('#tbod");
            WriteLiteral(@"ybasket').append(`<tr class=""tables"">
                     <td id=""parfumeName"" value=""${item.ParfumeName}"">${item.ParfumeName}</td>
                    <td id=""brandName"" value=""${item.Brand.BrandName}"">${item.Brand.BrandName}</td>
                    <td id=""price"" value=""${item.Price}"">${item.Price}</td>
                    <td id=""brandid"" display=none value=""${item.BrandId}"" > ${item.BrandId} </td>
                    <td id=""parfumeid"" display=none value=""${item.ParfumeID}"" > ${item.ParfumeID} </td>
                </tr>`)
                })
            }
        });
    }

    $('#OrderAdd').click(function () {
        for (var i = 0; i < list.length; i++) {
            $.ajax({
            type: ""POST"",
            url: ""/OrderDetail/AddOrderDetail"",
            data:
            {
                ParfumeID: list[i].ParfumeID,
                Price: list[i].Price,
                Count: 1
            }
            
        });
        }
        
    })
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
